-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local BACKGROUND = Instance.new("Frame")
local DRAGABLEHERE = Instance.new("TextLabel")
local HOP = Instance.new("TextButton")
local Minimize = Instance.new("TextButton")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

BACKGROUND.Name = "BACKGROUND"
BACKGROUND.Parent = ScreenGui
BACKGROUND.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
BACKGROUND.BorderColor3 = Color3.fromRGB(255, 255, 255)
BACKGROUND.Position = UDim2.new(0.0569395721, 0, 0.160623401, 0)
BACKGROUND.Size = UDim2.new(0, 63, 0, 56)

DRAGABLEHERE.Name = "DRAGABLE HERE"
DRAGABLEHERE.Parent = BACKGROUND
DRAGABLEHERE.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
DRAGABLEHERE.BackgroundTransparency = 1.000
DRAGABLEHERE.BorderColor3 = Color3.fromRGB(27, 42, 53)
DRAGABLEHERE.Size = UDim2.new(0, 63, 0, 15)
DRAGABLEHERE.Font = Enum.Font.SourceSans
DRAGABLEHERE.Text = "SERVER HOP"
DRAGABLEHERE.TextColor3 = Color3.fromRGB(255, 255, 255)
DRAGABLEHERE.TextSize = 14.000

HOP.Name = "HOP"
HOP.Parent = BACKGROUND
HOP.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
HOP.Position = UDim2.new(0, 0, 0.267857134, 0)
HOP.Size = UDim2.new(0, 63, 0, 36)
HOP.Font = Enum.Font.SourceSans
HOP.Text = "HOP"
HOP.TextColor3 = Color3.fromRGB(255, 255, 255)
HOP.TextScaled = true
HOP.TextSize = 14.000
HOP.TextWrapped = true

Minimize.Name = "Minimize"
Minimize.Parent = ScreenGui
Minimize.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Minimize.Position = UDim2.new(-0.00107473135, 0, 0.160623416, 0)
Minimize.Size = UDim2.new(0, 44, 0, 38)
Minimize.Font = Enum.Font.SourceSans
Minimize.Text = "X"
Minimize.TextColor3 = Color3.fromRGB(0, 0, 0)
Minimize.TextScaled = true
Minimize.TextSize = 14.000
Minimize.TextWrapped = true

-- Scripts:

local function QSQC_fake_script() -- HOP.HOP 
	local script = Instance.new('Script', HOP)

	HOP.MouseButton1Down:connect(function()
		local PlaceID = game.PlaceId
		local AllIDs = {}
		local foundAnything = ""
		local actualHour = os.date("!*t").hour
		local Deleted = false
		function TPReturner()
			local Site;
			if foundAnything == "" then
				Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
			else
				Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
			end
			local ID = ""
			if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
				foundAnything = Site.nextPageCursor
			end
			local num = 0;
			for i,v in pairs(Site.data) do
				local Possible = true
				ID = tostring(v.id)
				if tonumber(v.maxPlayers) > tonumber(v.playing) then
					for _,Existing in pairs(AllIDs) do
						if num ~= 0 then
							if ID == tostring(Existing) then
								Possible = false
							end
						else
							if tonumber(actualHour) ~= tonumber(Existing) then
								local delFile = pcall(function()
									AllIDs = {}
									table.insert(AllIDs, actualHour)
								end)
							end
						end
						num = num + 1
					end
					if Possible == true then
						table.insert(AllIDs, ID)
						wait()
						pcall(function()
							wait()
							game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
						end)
						wait(4)
					end
				end
			end
		end
		function Teleport() 
			while wait() do
				pcall(function()
					TPReturner()
					if foundAnything ~= "" then
						TPReturner()
					end
				end)
			end
		end
		Teleport()
	end)
end
coroutine.wrap(QSQC_fake_script)()
local function SMTFC_fake_script() -- BACKGROUND.DRAG SCRIPT 
	local script = Instance.new('LocalScript', BACKGROUND)

	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
	
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			if gui.Visible then
				update(input)
			end
		end
	end)
end
coroutine.wrap(SMTFC_fake_script)()
local function LDNLYJU_fake_script() -- ScreenGui.LocalScript 
	local script = Instance.new('LocalScript', ScreenGui)

	local SGui = script.Parent
	local Frame = SGui:WaitForChild("BACKGROUND")
	local Button = SGui:WaitForChild("Minimize")
	
	Button.MouseButton1Up:Connect(function()
		Frame.Visible = not Frame.Visible
	end)
end
coroutine.wrap(LDNLYJU_fake_script)()
